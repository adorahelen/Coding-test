package study.designpattern;
/*객체 생성 과정에서 객체의 생성 방식을 개선하여 유연성과 재사용성을 높이는 패턴입니다.

	•	싱글톤 (Singleton): 특정 클래스의 인스턴스가 하나만 생성되도록 보장하는 패턴.
	•	팩토리 메서드 (Factory Method): 객체 생성을 하위 클래스에 위임하는 패턴으로, 객체 생성을 위한 인터페이스는 정의하되, 구체적인 클래스는 서브클래스가 결정.
	•	추상 팩토리 (Abstract Factory): 관련된 객체들의 집합을 생성하는 인터페이스를 제공하여 구체적인 클래스를 명시하지 않고도 다양한 객체를 생성하는 패턴.
	•	빌더 (Builder): 복잡한 객체를 단계별로 생성할 수 있도록 하는 패턴. 객체 생성 절차를 분리하여 객체의 생성 과정과 표현 방법을 분리.
	•	프로토타입 (Prototype): 기존 객체를 복제하여 새로운 객체를 생성하는 패턴. 객체 생성 비용이 클 때 유용.*/

public class CreationalPatterns {

}
